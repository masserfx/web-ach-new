name: Website Performance Monitoring

on:
  schedule:
    # Run every 2 hours
    - cron: '0 */2 * * *'
  workflow_dispatch:
    inputs:
      pages:
        description: 'Comma-separated list of pages to check (or "all")'
        required: false
        default: 'all'

jobs:
  monitor:
    name: Monitor Website Performance
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: monitoring/package.json

      - name: Install Chromium
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Install dependencies
        working-directory: monitoring
        run: npm ci

      - name: Run monitoring check
        working-directory: monitoring
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          MONITORING_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MONITORING_BASE_URL: ${{ secrets.MONITORING_BASE_URL || 'http://91.99.126.53:3100' }}
          CHROME_PATH: /usr/bin/chromium-browser
        run: npm run check

      - name: Upload monitoring reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-reports-${{ github.run_number }}
          path: monitoring/reports/
          retention-days: 30

      - name: Check for performance regressions
        if: always()
        working-directory: monitoring
        run: |
          # Parse latest report and check for failures
          LATEST_REPORT=$(ls -t reports/report-*.json | head -1)
          if [ -f "$LATEST_REPORT" ]; then
            STATUS=$(jq -r '.overallStatus' "$LATEST_REPORT")
            echo "Overall Status: $STATUS"

            if [ "$STATUS" = "RED" ]; then
              echo "::error::Critical performance issues detected!"
              exit 1
            elif [ "$STATUS" = "YELLOW" ]; then
              echo "::warning::Performance warnings detected"
            else
              echo "::notice::All checks passed ‚úÖ"
            fi
          fi

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'monitoring/reports/';
            const files = fs.readdirSync(reportPath);
            const latestReport = files
              .filter(f => f.startsWith('report-'))
              .sort()
              .reverse()[0];

            if (!latestReport) {
              console.log('No report found');
              return;
            }

            const report = JSON.parse(
              fs.readFileSync(`${reportPath}${latestReport}`, 'utf8')
            );

            const body = `## üìä Website Performance Report

            **Overall Status:** ${report.overallStatus === 'GREEN' ? '‚úÖ' : report.overallStatus === 'YELLOW' ? '‚ö†Ô∏è' : '‚ùå'} ${report.overallStatus}

            | Page | Performance | Accessibility | Best Practices | SEO |
            |------|-------------|---------------|----------------|-----|
            ${report.pages.map(p =>
              `| ${p.url} | ${p.lighthouse.performance} | ${p.lighthouse.accessibility} | ${p.lighthouse.bestPractices} | ${p.lighthouse.seo} |`
            ).join('\n')}

            ${report.alerts.length > 0 ? `
            ### ‚ö†Ô∏è Alerts
            ${report.alerts.map(a => `- ${a}`).join('\n')}
            ` : ''}

            ${report.recommendations.length > 0 ? `
            ### üí° Recommendations
            ${report.recommendations.map(r => `- ${r}`).join('\n')}
            ` : ''}

            <details>
            <summary>View Full Report</summary>

            \`\`\`json
            ${JSON.stringify(report, null, 2)}
            \`\`\`
            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  notify-on-failure:
    name: Notify on Monitoring Failure
    needs: monitor
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        if: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK }} \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "‚ùå Website monitoring failed!",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Website Monitoring Alert*\n\n‚ùå Monitoring check failed for AC Heating website.\n\n*Workflow:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                }
              ]
            }'
